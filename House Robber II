class Solution {
    int fun(int ind,vector<int> &nums,vector<int> &dp){
        if(ind == 0) return nums[ind];
        if(dp[ind] != -1) return dp[ind];
        int notpick = 0+fun(ind-1,nums,dp);
        int pick = nums[ind];
        if(ind-2 >= 0)
            pick += fun(ind-2,nums,dp);
        return dp[ind] = max(pick,notpick);
    }
public:
    int rob(vector<int>& nums) {
        int n = nums.size();
        if(n == 1) return nums[0];
        vector<int> temp1,temp2;
        for(int i=0;i<n;i++){
            if(i != 0) temp1.push_back(nums[i]);
            if(i != n-1) temp2.push_back(nums[i]);
        }
        vector<int> dp1(n-1,-1), dp2(n-1,-1);
        return max(fun(n-2,temp1,dp1),fun(n-2,temp2,dp2));
    }
};
